{
  "address": "0x7066d903DF9695a5a30B50C24582dA7d1269A09f",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "Assign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "PunkBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "PunkNoLongerForSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minValue",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "PunkOffered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "PunkTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "buyPunk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mintPunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minSalePriceInWei",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "offerPunkForSaleToAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "punkIndexToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "punkNoLongerForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "punksOfferedForSale",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isForSale",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "onlySellTo",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "standard",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "transferPunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9047137195730ccab8ca6b93bdff5559a5326d4d8cd5524e791b8e1815af1962",
  "receipt": {
    "to": null,
    "from": "0x02e037F56728E947e92Af2c05baF7FeF387Ddd06",
    "contractAddress": "0x7066d903DF9695a5a30B50C24582dA7d1269A09f",
    "transactionIndex": 16,
    "gasUsed": "868058",
    "logsBloom": "0x
    "blockHash": "0x72672803e4001e2f1cd5efeba1a4324608d55a8e38bb78ae41be59d0d8ef79ff",
    "transactionHash": "0x9047137195730ccab8ca6b93bdff5559a5326d4d8cd5524e791b8e1815af1962",
    "logs": [],
    "blockNumber": 8338737,
    "cumulativeGasUsed": "2319374",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c5f9aadce211628372c9e72d29b5a75b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"Assign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"PunkBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"PunkNoLongerForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"PunkOffered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"PunkTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"buyPunk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSalePriceInWei\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"offerPunkForSaleToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punkIndexToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"punkNoLongerForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punksOfferedForSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onlySellTo\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"transferPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestnetPunks.sol\":\"TestnetPunks\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPunks.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.4;\\n\\ninterface IPunks {\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function punkIndexToAddress(uint256 punkIndex) external view returns (address);\\n\\n    function transferPunk(address to, uint256 punkIndex) external;\\n\\n    function offerPunkForSaleToAddress(\\n        uint256 punkIndex,\\n        uint256 minSalePriceInWei,\\n        address toAddress\\n    ) external;\\n\\n    function buyPunk(uint256 punkIndex) external payable;\\n}\\n\",\"keccak256\":\"0x00a6a4f25c5d5c71ee77306246c6425cedcf4ae7b86d88d265bb6d7c6996c5d5\",\"license\":\"BUSL-1.1\"},\"contracts/test/TestnetPunks.sol\":{\"content\":\"// SPDX-License-Identifier: -\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"../interfaces/IPunks.sol\\\";\\n\\ncontract TestnetPunks is IPunks {\\n    string public standard = \\\"CryptoPunks\\\";\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals;\\n    uint256 public totalSupply;\\n\\n    uint256 public counter = 0;\\n\\n    struct Offer {\\n        bool isForSale;\\n        uint256 punkIndex;\\n        address seller;\\n        uint256 minValue; // in ether\\n        address onlySellTo; // specify to sell only to a specific person\\n    }\\n\\n    // A record of punks that are offered for sale at a specific minimum value, and perhaps to a specific person\\n    mapping(uint256 => Offer) public punksOfferedForSale;\\n\\n    //mapping (address => uint) public addressToPunkIndex;\\n    mapping(uint256 => address) public override punkIndexToAddress;\\n\\n    /* This creates an array with all balances */\\n    mapping(address => uint256) public override balanceOf;\\n\\n    mapping(address => uint256) public pendingWithdrawals;\\n\\n    event Assign(address indexed to, uint256 punkIndex);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event PunkTransfer(address indexed from, address indexed to, uint256 punkIndex);\\n    event PunkOffered(uint256 indexed punkIndex, uint256 minValue, address indexed toAddress);\\n    event PunkBought(uint256 indexed punkIndex, uint256 value, address indexed fromAddress, address indexed toAddress);\\n    event PunkNoLongerForSale(uint256 indexed punkIndex);\\n\\n    /* Initializes contract with initial supply tokens to the creator of the contract */\\n    constructor() payable {\\n        totalSupply = 10000; // Update total supply\\n        name = \\\"TESTNETPUNKS\\\"; // Set the name for display purposes\\n        symbol = \\\"TC\\\"; // Set the symbol for display purposes\\n        decimals = 0; // Amount of decimals for display purposes\\n    }\\n\\n    function mintPunk(address to) public {\\n        uint256 punkIndex = counter;\\n        punkIndexToAddress[punkIndex] = to;\\n        balanceOf[to]++;\\n        counter++;\\n        emit Assign(to, punkIndex);\\n    }\\n\\n    // Transfer ownership of a punk to another user without requiring payment\\n    function transferPunk(address to, uint256 punkIndex) public override {\\n        require(punkIndexToAddress[punkIndex] == msg.sender, \\\"sender not owner\\\");\\n        require(punkIndex < 10000, \\\"index >= 10000\\\");\\n        punkIndexToAddress[punkIndex] = to;\\n        balanceOf[msg.sender]--;\\n        balanceOf[to]++;\\n        emit Transfer(msg.sender, to, 1);\\n        emit PunkTransfer(msg.sender, to, punkIndex);\\n    }\\n\\n    function offerPunkForSaleToAddress(\\n        uint256 punkIndex,\\n        uint256 minSalePriceInWei,\\n        address toAddress\\n    ) external override {\\n        require(punkIndexToAddress[punkIndex] == msg.sender, \\\"sender not owner\\\");\\n        require(punkIndex < 10000, \\\"index >= 10000\\\");\\n        punksOfferedForSale[punkIndex] = Offer(true, punkIndex, msg.sender, minSalePriceInWei, toAddress);\\n        emit PunkOffered(punkIndex, minSalePriceInWei, toAddress);\\n    }\\n\\n    function buyPunk(uint256 punkIndex) external payable override {\\n        Offer memory offer = punksOfferedForSale[punkIndex];\\n        require(punkIndex < 10000, \\\"index >= 10000\\\");\\n        require(offer.isForSale, \\\"punk not for sale\\\");\\n        require(offer.onlySellTo == address(0) || offer.onlySellTo == msg.sender, \\\"shouldnt be sold to this user\\\");\\n        require(msg.value >= offer.minValue, \\\"not enough ETH sent\\\");\\n        require(punkIndexToAddress[punkIndex] == offer.seller, \\\"seller not owner\\\");\\n\\n        address seller = offer.seller;\\n\\n        punkIndexToAddress[punkIndex] = msg.sender;\\n        balanceOf[seller]--;\\n        balanceOf[msg.sender]++;\\n        emit Transfer(seller, msg.sender, 1);\\n\\n        punkNoLongerForSale(punkIndex);\\n        emit PunkBought(punkIndex, msg.value, seller, msg.sender);\\n    }\\n\\n    function punkNoLongerForSale(uint256 punkIndex) public {\\n        require(punkIndexToAddress[punkIndex] == msg.sender, \\\"sender not owner\\\");\\n        require(punkIndex < 10000, \\\"index >= 10000\\\");\\n        punksOfferedForSale[punkIndex] = Offer(false, punkIndex, msg.sender, 0, address(0));\\n        emit PunkNoLongerForSale(punkIndex);\\n    }\\n}\\n\",\"keccak256\":\"0xa90e1da4e40a874d0c461ef6a1bdb331940fc4f605b08de86d1365eb696a1d51\",\"license\":\"-\"}},\"version\":1}",
  "bytecode": "0x60c0604052600b60808190526a43727970746f50756e6b7360a81b60a09081526200002e9160009190620000aa565b50600060055561271060045560408051808201909152600c8082526b544553544e455450554e4b5360a01b60209092019182526200006f91600191620000aa565b5060408051808201909152600280825261544360f01b6020909201918252620000999181620000aa565b506003805460ff191690556200018d565b828054620000b89062000150565b90600052602060002090601f016020900481019282620000dc576000855562000127565b82601f10620000f757805160ff191683800117855562000127565b8280016001018555821562000127579182015b82811115620001275782518255916020019190600101906200010a565b506200013592915062000139565b5090565b5b808211156200013557600081556001016200013a565b600181811c908216806200016557607f821691505b602082108114156200018757634e487b7160e01b600052602260045260246000fd5b50919050565b610cee806200019d6000396000f3fe6080604052600436106100c85760003560e01c806370a082311161007a57806370a08231146102505780638264fe981461027d57806388c76581146102925780638b72a2ec146102b257806395d89b41146102d2578063bf31196f146102e7578063f3f4370314610307578063f6eeff1e1461033457600080fd5b806306fdde03146100cd578063088f11f3146100f857806318160ddd14610187578063313ce567146101ab57806358178168146101d75780635a3b7e421461022557806361bc221a1461023a575b600080fd5b3480156100d957600080fd5b506100e2610354565b6040516100ef9190610bb9565b60405180910390f35b34801561010457600080fd5b50610151610113366004610b6d565b6006602052600090815260409020805460018201546002830154600384015460049094015460ff9093169391926001600160a01b0391821692911685565b60408051951515865260208601949094526001600160a01b0392831693850193909352606084015216608082015260a0016100ef565b34801561019357600080fd5b5061019d60045481565b6040519081526020016100ef565b3480156101b757600080fd5b506003546101c59060ff1681565b60405160ff90911681526020016100ef565b3480156101e357600080fd5b5061020d6101f2366004610b6d565b6007602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100ef565b34801561023157600080fd5b506100e26103e2565b34801561024657600080fd5b5061019d60055481565b34801561025c57600080fd5b5061019d61026b366004610b23565b60086020526000908152604090205481565b61029061028b366004610b6d565b6103ef565b005b34801561029e57600080fd5b506102906102ad366004610b23565b6106dc565b3480156102be57600080fd5b506102906102cd366004610b44565b610782565b3480156102de57600080fd5b506100e26108cc565b3480156102f357600080fd5b50610290610302366004610b85565b6108d9565b34801561031357600080fd5b5061019d610322366004610b23565b60096020526000908152604090205481565b34801561034057600080fd5b5061029061034f366004610b6d565b6109fa565b6001805461036190610c75565b80601f016020809104026020016040519081016040528092919081815260200182805461038d90610c75565b80156103da5780601f106103af576101008083540402835291602001916103da565b820191906000526020600020905b8154815290600101906020018083116103bd57829003601f168201915b505050505081565b6000805461036190610c75565b600081815260066020908152604091829020825160a081018452815460ff161515815260018201549281019290925260028101546001600160a01b03908116938301939093526003810154606083015260040154909116608082015261271082106104755760405162461bcd60e51b815260040161046c90610c0c565b60405180910390fd5b80516104b75760405162461bcd60e51b815260206004820152601160248201527070756e6b206e6f7420666f722073616c6560781b604482015260640161046c565b60808101516001600160a01b031615806104dd575060808101516001600160a01b031633145b6105295760405162461bcd60e51b815260206004820152601d60248201527f73686f756c646e7420626520736f6c6420746f20746869732075736572000000604482015260640161046c565b80606001513410156105735760405162461bcd60e51b81526020600482015260136024820152721b9bdd08195b9bdd59da08115512081cd95b9d606a1b604482015260640161046c565b6040808201516000848152600760205291909120546001600160a01b039081169116146105d55760405162461bcd60e51b815260206004820152601060248201526f39b2b63632b9103737ba1037bbb732b960811b604482015260640161046c565b60408082015160008481526007602090815283822080546001600160a01b031916331790556001600160a01b0383168252600890529182208054919261061a83610c5e565b909155505033600090815260086020526040812080549161063a83610cb0565b90915550506040516001815233906001600160a01b038316907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610689836109fa565b336001600160a01b0316816001600160a01b0316847f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e3346040516106cf91815260200190565b60405180910390a4505050565b600554600081815260076020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526008909152812080549161072183610cb0565b90915550506005805490600061073683610cb0565b9190505550816001600160a01b03167f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba8260405161077691815260200190565b60405180910390a25050565b6000818152600760205260409020546001600160a01b031633146107b85760405162461bcd60e51b815260040161046c90610c34565b61271081106107d95760405162461bcd60e51b815260040161046c90610c0c565b600081815260076020908152604080832080546001600160a01b0319166001600160a01b0387161790553383526008909152812080549161081983610c5e565b90915550506001600160a01b038216600090815260086020526040812080549161084283610cb0565b9091555050604051600181526001600160a01b0383169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36040518181526001600160a01b0383169033907f05af636b70da6819000c49f85b21fa82081c632069bb626f30932034099107d89060200160405180910390a35050565b6002805461036190610c75565b6000838152600760205260409020546001600160a01b0316331461090f5760405162461bcd60e51b815260040161046c90610c34565b61271083106109305760405162461bcd60e51b815260040161046c90610c0c565b6040805160a0810182526001808252602080830187815233848601908152606085018881526001600160a01b038881166080880181815260008d8152600688528a90209851895460ff191690151517895594519688019690965591516002870180546001600160a01b031990811692851692909217905590516003870155915160049095018054909216941693909317909255915184815285917f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb910160405180910390a3505050565b6000818152600760205260409020546001600160a01b03163314610a305760405162461bcd60e51b815260040161046c90610c34565b6127108110610a515760405162461bcd60e51b815260040161046c90610c0c565b6040805160a0810182526000808252602080830185815233848601908152606085018481526080860185815288865260069094528685209551865460ff191690151517865591516001860155516002850180546001600160a01b03199081166001600160a01b0393841617909155915160038601559151600490940180549091169390911692909217909155905182917fb0e0a660b4e50f26f0b7ce75c24655fc76cc66e3334a54ff410277229fa10bd491a250565b80356001600160a01b0381168114610b1e57600080fd5b919050565b600060208284031215610b34578081fd5b610b3d82610b07565b9392505050565b60008060408385031215610b56578081fd5b610b5f83610b07565b946020939093013593505050565b600060208284031215610b7e578081fd5b5035919050565b600080600060608486031215610b99578081fd5b8335925060208401359150610bb060408501610b07565b90509250925092565b6000602080835283518082850152825b81811015610be557858101830151858201604001528201610bc9565b81811115610bf65783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600e908201526d0696e646578203e3d2031303030360941b604082015260600190565b60208082526010908201526f39b2b73232b9103737ba1037bbb732b960811b604082015260600190565b600081610c6d57610c6d610ccb565b506000190190565b600181811c90821680610c8957607f821691505b60208210811415610caa57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610cc457610cc4610ccb565b5060010190565b634e487b7160e01b600052601160045260246000fdfea164736f6c6343000804000a",
  "deployedBytecode": "0x6080604052600436106100c85760003560e01c806370a082311161007a57806370a08231146102505780638264fe981461027d57806388c76581146102925780638b72a2ec146102b257806395d89b41146102d2578063bf31196f146102e7578063f3f4370314610307578063f6eeff1e1461033457600080fd5b806306fdde03146100cd578063088f11f3146100f857806318160ddd14610187578063313ce567146101ab57806358178168146101d75780635a3b7e421461022557806361bc221a1461023a575b600080fd5b3480156100d957600080fd5b506100e2610354565b6040516100ef9190610bb9565b60405180910390f35b34801561010457600080fd5b50610151610113366004610b6d565b6006602052600090815260409020805460018201546002830154600384015460049094015460ff9093169391926001600160a01b0391821692911685565b60408051951515865260208601949094526001600160a01b0392831693850193909352606084015216608082015260a0016100ef565b34801561019357600080fd5b5061019d60045481565b6040519081526020016100ef565b3480156101b757600080fd5b506003546101c59060ff1681565b60405160ff90911681526020016100ef565b3480156101e357600080fd5b5061020d6101f2366004610b6d565b6007602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100ef565b34801561023157600080fd5b506100e26103e2565b34801561024657600080fd5b5061019d60055481565b34801561025c57600080fd5b5061019d61026b366004610b23565b60086020526000908152604090205481565b61029061028b366004610b6d565b6103ef565b005b34801561029e57600080fd5b506102906102ad366004610b23565b6106dc565b3480156102be57600080fd5b506102906102cd366004610b44565b610782565b3480156102de57600080fd5b506100e26108cc565b3480156102f357600080fd5b50610290610302366004610b85565b6108d9565b34801561031357600080fd5b5061019d610322366004610b23565b60096020526000908152604090205481565b34801561034057600080fd5b5061029061034f366004610b6d565b6109fa565b6001805461036190610c75565b80601f016020809104026020016040519081016040528092919081815260200182805461038d90610c75565b80156103da5780601f106103af576101008083540402835291602001916103da565b820191906000526020600020905b8154815290600101906020018083116103bd57829003601f168201915b505050505081565b6000805461036190610c75565b600081815260066020908152604091829020825160a081018452815460ff161515815260018201549281019290925260028101546001600160a01b03908116938301939093526003810154606083015260040154909116608082015261271082106104755760405162461bcd60e51b815260040161046c90610c0c565b60405180910390fd5b80516104b75760405162461bcd60e51b815260206004820152601160248201527070756e6b206e6f7420666f722073616c6560781b604482015260640161046c565b60808101516001600160a01b031615806104dd575060808101516001600160a01b031633145b6105295760405162461bcd60e51b815260206004820152601d60248201527f73686f756c646e7420626520736f6c6420746f20746869732075736572000000604482015260640161046c565b80606001513410156105735760405162461bcd60e51b81526020600482015260136024820152721b9bdd08195b9bdd59da08115512081cd95b9d606a1b604482015260640161046c565b6040808201516000848152600760205291909120546001600160a01b039081169116146105d55760405162461bcd60e51b815260206004820152601060248201526f39b2b63632b9103737ba1037bbb732b960811b604482015260640161046c565b60408082015160008481526007602090815283822080546001600160a01b031916331790556001600160a01b0383168252600890529182208054919261061a83610c5e565b909155505033600090815260086020526040812080549161063a83610cb0565b90915550506040516001815233906001600160a01b038316907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610689836109fa565b336001600160a01b0316816001600160a01b0316847f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e3346040516106cf91815260200190565b60405180910390a4505050565b600554600081815260076020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526008909152812080549161072183610cb0565b90915550506005805490600061073683610cb0565b9190505550816001600160a01b03167f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba8260405161077691815260200190565b60405180910390a25050565b6000818152600760205260409020546001600160a01b031633146107b85760405162461bcd60e51b815260040161046c90610c34565b61271081106107d95760405162461bcd60e51b815260040161046c90610c0c565b600081815260076020908152604080832080546001600160a01b0319166001600160a01b0387161790553383526008909152812080549161081983610c5e565b90915550506001600160a01b038216600090815260086020526040812080549161084283610cb0565b9091555050604051600181526001600160a01b0383169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36040518181526001600160a01b0383169033907f05af636b70da6819000c49f85b21fa82081c632069bb626f30932034099107d89060200160405180910390a35050565b6002805461036190610c75565b6000838152600760205260409020546001600160a01b0316331461090f5760405162461bcd60e51b815260040161046c90610c34565b61271083106109305760405162461bcd60e51b815260040161046c90610c0c565b6040805160a0810182526001808252602080830187815233848601908152606085018881526001600160a01b038881166080880181815260008d8152600688528a90209851895460ff191690151517895594519688019690965591516002870180546001600160a01b031990811692851692909217905590516003870155915160049095018054909216941693909317909255915184815285917f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb910160405180910390a3505050565b6000818152600760205260409020546001600160a01b03163314610a305760405162461bcd60e51b815260040161046c90610c34565b6127108110610a515760405162461bcd60e51b815260040161046c90610c0c565b6040805160a0810182526000808252602080830185815233848601908152606085018481526080860185815288865260069094528685209551865460ff191690151517865591516001860155516002850180546001600160a01b03199081166001600160a01b0393841617909155915160038601559151600490940180549091169390911692909217909155905182917fb0e0a660b4e50f26f0b7ce75c24655fc76cc66e3334a54ff410277229fa10bd491a250565b80356001600160a01b0381168114610b1e57600080fd5b919050565b600060208284031215610b34578081fd5b610b3d82610b07565b9392505050565b60008060408385031215610b56578081fd5b610b5f83610b07565b946020939093013593505050565b600060208284031215610b7e578081fd5b5035919050565b600080600060608486031215610b99578081fd5b8335925060208401359150610bb060408501610b07565b90509250925092565b6000602080835283518082850152825b81811015610be557858101830151858201604001528201610bc9565b81811115610bf65783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600e908201526d0696e646578203e3d2031303030360941b604082015260600190565b60208082526010908201526f39b2b73232b9103737ba1037bbb732b960811b604082015260600190565b600081610c6d57610c6d610ccb565b506000190190565b600181811c90821680610c8957607f821691505b60208210811415610caa57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610cc457610cc4610ccb565b5060010190565b634e487b7160e01b600052601160045260246000fdfea164736f6c6343000804000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 24562,
        "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
        "label": "standard",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 24564,
        "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 24566,
        "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
        "label": "symbol",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 24568,
        "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
        "label": "decimals",
        "offset": 0,
        "slot": "3",
        "type": "t_uint8"
      },
      {
        "astId": 24570,
        "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
        "label": "totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 24573,
        "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
        "label": "counter",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 24589,
        "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
        "label": "punksOfferedForSale",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Offer)24584_storage)"
      },
      {
        "astId": 24594,
        "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
        "label": "punkIndexToAddress",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 24599,
        "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
        "label": "balanceOf",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 24603,
        "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
        "label": "pendingWithdrawals",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_struct(Offer)24584_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct TestnetPunks.Offer)",
        "numberOfBytes": "32",
        "value": "t_struct(Offer)24584_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Offer)24584_storage": {
        "encoding": "inplace",
        "label": "struct TestnetPunks.Offer",
        "members": [
          {
            "astId": 24575,
            "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
            "label": "isForSale",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 24577,
            "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
            "label": "punkIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 24579,
            "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
            "label": "seller",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 24581,
            "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
            "label": "minValue",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 24583,
            "contract": "contracts/test/TestnetPunks.sol:TestnetPunks",
            "label": "onlySellTo",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}